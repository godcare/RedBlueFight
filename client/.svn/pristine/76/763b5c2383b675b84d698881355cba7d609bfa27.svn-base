{"version":3,"sources":["MainMenuControl.js"],"names":["cc","Class","extends","Component","properties","RedPoint","default","type","Label","BluePoint","GameIcons","Node","GameIconSprites","SpriteFrame","ScheduleSelectSprites","StartSprite","IsSelectPanelOn","SelectedGamePanel","SelectGameSwitch","GameListPanel","ScheduleGameParent","currentSelectedIndex","start","InitData","i","getChildByName","getComponent","string","Global","GameData","AllGames","displayName","PlayedGameCount","toString","SetScheduler","log","ScheduledGames","length","find","Sprite","spriteFrame","active","MaxChooseCount","tmpI","indexOf","color","Color","BLUE","WHITE","TotalGameCount","ORANGE","Button","enabled","GRAY","OnRemoveThisClick","event","customEventData","tmpS","splice","OnClearClick","OnSelectGameClicked","action","moveBy","runAction","OnScheduledGameClicked","OnGameIconClicked","tmpIndex","push","OnScheduleStart","IsPlayForFun","ResultArray","LastSceneName","director","loadScene","OnPlayThisClick","OnCloseSelectedPanelButton"],"mappings":"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","file":"MainMenuControl.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Scripts\\Control\\MainMenu","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        RedPoint:\r\n        {\r\n            default: null,\r\n            type: cc.Label,\r\n        },\r\n        BluePoint:\r\n        {\r\n            default: null,\r\n            type: cc.Label,\r\n        },\r\n\r\n        GameIcons:\r\n        {\r\n            default: [],\r\n            type: [cc.Node],\r\n\r\n        },\r\n        GameIconSprites:\r\n        {\r\n            default: [],\r\n            type: [cc.SpriteFrame],\r\n        },\r\n        ScheduleSelectSprites:\r\n        {\r\n            default: [],\r\n            type: [cc.SpriteFrame],\r\n        },\r\n        StartSprite:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        IsSelectPanelOn:\r\n        {\r\n            default: false,\r\n        },\r\n        SelectedGamePanel:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        SelectGameSwitch:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        GameListPanel:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        ScheduleGameParent:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        currentSelectedIndex: -1,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start() {\r\n        this.InitData();\r\n    },\r\n\r\n    InitData: function () {\r\n        //初始化游戏图标\r\n        for (var i = 0; i < 8; i++) {\r\n            this.GameIcons[i].getChildByName(\"Name\").getComponent(cc.Label).string = Global.GameData.AllGames[i].displayName;\r\n        }\r\n        Global.GameData.PlayedGameCount = 0;\r\n        this.RedPoint.string = Global.GameData.RedPoint.toString();\r\n        this.BluePoint.string = Global.GameData.BluePoint.toString();\r\n        this.SetScheduler();\r\n    },\r\n\r\n    //设置排上日程的游戏列表\r\n    SetScheduler: function () {\r\n        cc.log(\"Setting Scheduler\");\r\n        //设置已选\r\n        for (var i = 0; i < Global.GameData.ScheduledGames.length; i++) {\r\n            //设置底部游戏列表\r\n            // cc.find(\"List/\" + Global.GameData.ScheduledGames[i].toString() + \"/Mark\", this.GameListPanel).active = true;\r\n            // cc.find(\"List/\" + Global.GameData.ScheduledGames[i].toString() + \"/Name\", this.GameListPanel).color = new cc.color(255, 255, 255, 255);\r\n\r\n            //设置中部游戏日程表\r\n\r\n            cc.find(i.toString() + \"/Icon\", this.ScheduleGameParent).getComponent(cc.Sprite).spriteFrame = this.GameIconSprites[Global.GameData.ScheduledGames[i]];\r\n            cc.find(i.toString() + \"/Name\", this.ScheduleGameParent).getComponent(cc.Label).string = Global.GameData.AllGames[Global.GameData.ScheduledGames[i]].displayName;\r\n            cc.find(i.toString() + \"/Icon\", this.ScheduleGameParent).active = true;\r\n            cc.find(i.toString() + \"/Name\", this.ScheduleGameParent).active = true;\r\n            cc.find(i.toString(), this.ScheduleGameParent).getComponent(cc.Sprite).spriteFrame = this.ScheduleSelectSprites[0];\r\n\r\n        }\r\n        //设置未选\r\n        for (var i = Global.GameData.ScheduledGames.length; i < Global.GameData.MaxChooseCount; i++) {\r\n            cc.find(i.toString() + \"/Icon\", this.ScheduleGameParent).active = false;\r\n            cc.find(i.toString() + \"/Name\", this.ScheduleGameParent).active = false;\r\n            cc.find(i.toString(), this.ScheduleGameParent).getComponent(cc.Sprite).spriteFrame = this.ScheduleSelectSprites[1];\r\n        }\r\n        cc.log(\"Plan Game:\");\r\n        for (var i = 0; i < Global.GameData.ScheduledGames.length; i++) {\r\n            cc.log(Global.GameData.ScheduledGames[i]);\r\n        }\r\n        for (var i = 0; i < 8; i++) {\r\n            var tmpI = Global.GameData.ScheduledGames.indexOf(i.toString());\r\n            if (tmpI == -1) {\r\n                cc.log(\"Game\" + i + \"Not In\");\r\n                cc.find(\"List/\" + i.toString() + \"/Mark\", this.GameListPanel).active = false;\r\n                cc.find(\"List/\" + i.toString() + \"/Name\", this.GameListPanel).color = cc.Color.BLUE;\r\n            }\r\n            else {\r\n                cc.log(\"Game\" + i + \"In\");\r\n                cc.find(\"List/\" + i.toString() + \"/Mark\", this.GameListPanel).active = true;\r\n                cc.find(\"List/\" + i.toString() + \"/Name\", this.GameListPanel).color = cc.Color.WHITE;\r\n            }\r\n        }\r\n        //验证是否满足开始条件\r\n        if (Global.GameData.ScheduledGames.length >= Global.GameData.TotalGameCount) {\r\n            this.StartSprite.color = cc.Color.ORANGE;\r\n            this.StartSprite.getComponent(cc.Button).enabled = true;\r\n        }\r\n        else {\r\n            this.StartSprite.color = cc.Color.GRAY;\r\n            this.StartSprite.getComponent(cc.Button).enabled = false;\r\n        }\r\n\r\n    },\r\n    OnRemoveThisClick(event, customEventData) {\r\n        var tmpS = Global.GameData.ScheduledGames.indexOf(this.currentSelectedIndex.toString());\r\n        Global.GameData.ScheduledGames.splice(tmpS,1);\r\n        this.SetScheduler();\r\n        this.SelectedGamePanel.active = false;\r\n    },\r\n    OnClearClick(event, customEventData) {\r\n        Global.GameData.ScheduledGames = [];\r\n        this.SetScheduler();\r\n    },\r\n    //下方游戏列表单元点击\r\n    OnSelectGameClicked(event, customEventData) {\r\n        if (this.IsSelectPanelOn) {\r\n            var action = cc.moveBy(0.3, 0, -300);\r\n            this.GameListPanel.getChildByName(\"Mask\").active = false;\r\n            this.GameListPanel.runAction(action);\r\n            this.IsSelectPanelOn = false;\r\n            this.SelectGameSwitch.getChildByName(\"Label\").getComponent(cc.Label).string = \"选择游戏\";\r\n        }\r\n        else {\r\n            var action = cc.moveBy(0.3, 0, 300);\r\n            this.GameListPanel.getChildByName(\"Mask\").active = true;\r\n            this.GameListPanel.runAction(action);\r\n            this.IsSelectPanelOn = true;\r\n            this.SelectGameSwitch.getChildByName(\"Label\").getComponent(cc.Label).string = \"我选好了\";\r\n        }\r\n    },\r\n\r\n    //已安排游戏点击\r\n    OnScheduledGameClicked(event, customEventData) {\r\n        this.currentSelectedIndex = Global.GameData.ScheduledGames[customEventData];\r\n        this.SelectedGamePanel.active = true;\r\n        cc.find(\"IconPanel/Icon\", this.SelectedGamePanel).getComponent(cc.Sprite).spriteFrame = this.GameIconSprites[this.currentSelectedIndex];\r\n        cc.find(\"SelectedGameName\", this.SelectedGamePanel).getComponent(cc.Label).string = Global.GameData.AllGames[this.currentSelectedIndex].displayName;\r\n    },\r\n\r\n    OnGameIconClicked(event, customEventData) {\r\n        cc.log(customEventData);\r\n        if (this.IsSelectPanelOn) {\r\n            var tmpIndex = Global.GameData.ScheduledGames.indexOf(customEventData);\r\n            if (customEventData <= 7) //没完工的游戏先不往上放\r\n            {\r\n                if (Global.GameData.ScheduledGames.length < Global.GameData.MaxChooseCount) {//还可以接着选\r\n                    if (tmpIndex == -1) //原先没有就加\r\n                    {\r\n                        Global.GameData.ScheduledGames.push(customEventData);\r\n                    }\r\n                    else//原先有就删\r\n                    {\r\n                        Global.GameData.ScheduledGames.splice(tmpIndex, 1);\r\n                    }\r\n                    this.SetScheduler();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    },\r\n    OnScheduleStart(event, customEventData) {\r\n        Global.GameData.TotalGameCount = 3;\r\n        Global.GameData.IsPlayForFun = false;\r\n        Global.GameData.ResultArray = [];\r\n        Global.GameData.LastSceneName = \"GameScene\" + Global.GameData.ScheduledGames[0].toString();\r\n        cc.director.loadScene(\"GameScene\" + Global.GameData.ScheduledGames[0].toString());\r\n    },\r\n    OnPlayThisClick(event, customEventData) {\r\n        Global.GameData.TotalGameCount = 7;\r\n        Global.GameData.IsPlayForFun = true;\r\n        Global.GameData.ResultArray = [];\r\n        Global.GameData.LastSceneName = \"GameScene\" + this.currentSelectedIndex.toString();\r\n        cc.director.loadScene(\"GameScene\" + this.currentSelectedIndex.toString());\r\n    },\r\n\r\n    OnCloseSelectedPanelButton(event, customEventData) {\r\n        this.SelectedGamePanel.active = false;\r\n\r\n    },\r\n    // update (dt) {},\r\n});\r\n"]}