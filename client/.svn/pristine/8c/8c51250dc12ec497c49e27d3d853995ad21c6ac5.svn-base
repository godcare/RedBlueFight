"use strict";
cc._RF.push(module, 'fbae4O38e1ALKAxewiUZP2w', 'Game14Bullet');
// Scripts/Control/Games/Game14/Game14Bullet.js

"use strict";

// Learn cc.Class:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html
var Game14Control = require("Game14Control");
cc.Class({
    extends: cc.Component,

    properties: {
        // foo: {
        //     // ATTRIBUTES:
        //     default: null,        // The default value will be used only when the component attaching
        //                           // to a node for the first time
        //     type: cc.SpriteFrame, // optional, default is typeof default
        //     serializable: true,   // optional, default is true
        // },
        // bar: {
        //     get () {
        //         return this._bar;
        //     },
        //     set (value) {
        //         this._bar = value;
        //     }
        // },
        ySpeed: 300
    },

    // LIFE-CYCLE CALLBACKS:

    // onLoad () {},

    start: function start() {},
    update: function update(dt) {
        if (cc.find("Canvas").getComponent(Game14Control).GameStatus == 1) {
            this.node.y += dt * this.ySpeed;
        }
    },


    onBeginContact: function onBeginContact(contact, selfCollider, otherCollider) {
        // cc.log("Hit " + otherCollider.node.name);
        cc.find("Canvas").getComponent(Game14Control).OnBulletHit(selfCollider.node.name, otherCollider.node.name);
    }
});

cc._RF.pop();