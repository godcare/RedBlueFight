{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\Scripts\\Control\\Games\\Game11/assets\\Scripts\\Control\\Games\\Game11\\Game11Control.js"],"names":["SoundManager","require","cc","Class","extends","Component","properties","SoundMGR","default","type","GameResultNode","Node","CountDownNode","PauseNode","redRope","blueRope","GameStatus","rSpeed","bSpeed","rLength","bLength","maxLength","minLength","minSpeed","lengthChangeSpeed","redEar","blueEar","rflag","bflag","onLoad","director","getPhysicsManager","enabled","start","startAnimation","scheduleOnce","active","update","dt","width","rate","log","rotation","x"],"mappings":"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","file":"Game11Control.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\Scripts\\Control\\Games\\Game11","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar SoundManager = require(\"SoundManager\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        SoundMGR:\r\n        {\r\n            default: null,\r\n            type: SoundManager,\r\n        },\r\n        GameResultNode:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        CountDownNode:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        PauseNode:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        redRope:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        blueRope:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        GameStatus: 0,//0未开始，1开始了，2结束了\r\n        rSpeed: 0,\r\n        bSpeed: 0,\r\n        rLength: 275,\r\n        bLength: 275,\r\n        maxLength: 275,\r\n        minLength: 60,\r\n        minSpeed: 50,\r\n        lengthChangeSpeed: 100,\r\n        redEar:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        blueEar:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        rflag: -1,\r\n        bflag: -1,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        cc.director.getPhysicsManager().enabled = true;\r\n    },\r\n\r\n    start() {\r\n        this.startAnimation();\r\n        // cc.log(this.Coin.scaleX);\r\n    },\r\n    startAnimation() {\r\n\r\n        this.scheduleOnce(function () {\r\n            this.CountDownNode.active = true;\r\n        }, 0.5)\r\n        this.scheduleOnce(function () {\r\n            this.GameStatus = 1;\r\n            this.PauseNode.active = true;\r\n            // this.spawnBall(0);\r\n            // this.spawnBall(1);\r\n        }, 4.5);\r\n\r\n    },\r\n\r\n    update(dt) {\r\n        if (this.GameStatus == 1) {\r\n\r\n\r\n            this.rLength += dt * this.lengthChangeSpeed * this.rflag;\r\n            if (this.rLength < this.minLength) {\r\n                this.rLength = this.minLength;\r\n                this.rflag = 1;\r\n            }\r\n            else if (this.rLength > this.maxLength) {\r\n                this.rLength = this.maxLength;\r\n                this.rflag = -1;\r\n            }\r\n            this.redRope.width = this.rLength;\r\n            var rate = this.maxLength / this.rLength;\r\n            rate *= rate;\r\n            if (rate > 20) {\r\n                rate = 20;\r\n            }\r\n            else if (rate < 1) {\r\n                rate = 1;\r\n            }\r\n            this.rSpeed = this.minSpeed * rate;\r\n            cc.log(this.rSpeed);\r\n            this.redRope.rotation += dt * this.rSpeed;\r\n\r\n            this.redEar.x = this.rLength + 35;\r\n\r\n        }\r\n    },\r\n});\r\n"]}