{"version":3,"sources":["GameResultControl.js"],"names":["cc","Class","extends","Component","properties","MaxRound","Winner","LevelIndex","ShowPlayerY","ShowOpY","RedPlayer","default","type","Node","BluePlayer","BlueSprites","SpriteFrame","RedSprites","ResultSprites","RedOp","BlueOp","start","startAnimation","Global","GameData","CurrentWinner","log","getComponent","Sprite","spriteFrame","RedPoint","BluePoint","ResultArray","length","TotalGameCount","PlayedGameCount","push","currentPanel","node","getChildByName","toString","active","blueMoveAction","moveTo","runAction","redMoveAction","find","IsPlayForFun","bOpMoveAction","rOpMoveAction","i","OnMainClick","event","customEventData","director","loadScene","OnReplayClick","LastSceneName","OnNextClick","ScheduledGames"],"mappings":"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","file":"GameResultControl.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Scripts\\Control\\Games","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        MaxRound: 3,\r\n        Winner: 0,//胜者，0-红，1-蓝，-1-无\r\n        LevelIndex: 0,//下一关序号\r\n        ShowPlayerY: 450,//展示时的Y轴坐标\r\n        ShowOpY: 375,//菜单Y轴\r\n        RedPlayer:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        BluePlayer:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        BlueSprites://第一张失败，第二张胜利\r\n        {\r\n            default: [],\r\n            type: [cc.SpriteFrame],\r\n        },\r\n        RedSprites:\r\n        {\r\n            default: [],\r\n            type: [cc.SpriteFrame],\r\n        },\r\n        ResultSprites:\r\n        {\r\n            default: [],\r\n            type: [cc.SpriteFrame],\r\n        },\r\n        RedOp:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        BlueOp:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start() {\r\n        this.startAnimation();\r\n    },\r\n\r\n    startAnimation() {\r\n        this.Winner = Global.GameData.CurrentWinner;\r\n\r\n        cc.log(\"Current Winner:\" + this.Winner);\r\n        if (this.Winner == 0) {//red win\r\n            this.RedPlayer.getComponent(cc.Sprite).spriteFrame = this.RedSprites[1];\r\n            this.BluePlayer.getComponent(cc.Sprite).spriteFrame = this.BlueSprites[0];\r\n            Global.GameData.RedPoint += 1;\r\n        }\r\n        else if (this.Winner == 1) {//blue win\r\n            this.RedPlayer.getComponent(cc.Sprite).spriteFrame = this.RedSprites[0];\r\n            this.BluePlayer.getComponent(cc.Sprite).spriteFrame = this.BlueSprites[1];\r\n            Global.GameData.BluePoint += 1;\r\n        }\r\n        if (Global.GameData.ResultArray.length >= Global.GameData.TotalGameCount) {\r\n            Global.GameData.ResultArray = [];\r\n        }\r\n        if (Global.GameData.PlayedGameCount >= Global.GameData.TotalGameCount) {\r\n            Global.GameData.PlayedGameCount = 0;\r\n        }\r\n        Global.GameData.PlayedGameCount += 1;\r\n        Global.GameData.ResultArray.push(this.Winner);\r\n        var currentPanel = this.node.getChildByName(\"ScoreWhen\" + Global.GameData.TotalGameCount.toString());\r\n        currentPanel.active = true;\r\n        var blueMoveAction = cc.moveTo(0.5, 0, this.ShowPlayerY);\r\n        this.BluePlayer.runAction(blueMoveAction);\r\n        var redMoveAction = cc.moveTo(0.5, 0, -this.ShowPlayerY);\r\n        this.RedPlayer.runAction(redMoveAction);\r\n\r\n        cc.find(\"BtnNext\", this.RedOp).active = !Global.GameData.IsPlayForFun;\r\n        cc.find(\"BtnReplay\", this.RedOp).active = Global.GameData.IsPlayForFun;\r\n        cc.find(\"BtnNext\", this.BlueOp).active = !Global.GameData.IsPlayForFun;\r\n        cc.find(\"BtnReplay\", this.BlueOp).active = Global.GameData.IsPlayForFun;\r\n\r\n        var bOpMoveAction = cc.moveTo(1.5, 0, this.ShowOpY);\r\n        this.BlueOp.runAction(bOpMoveAction);\r\n        var rOpMoveAction = cc.moveTo(1.5, 0, -this.ShowPlayerY);\r\n        this.RedOp.runAction(rOpMoveAction);\r\n\r\n        for (var i = 0; i < Global.GameData.ResultArray.length; i++) {\r\n            cc.find(i.toString(), currentPanel).getComponent(cc.Sprite).spriteFrame = this.ResultSprites[Global.GameData.ResultArray[i]];\r\n        }\r\n    },\r\n\r\n    OnMainClick(event, customEventData) {\r\n        cc.director.loadScene(\"MainMenu\");\r\n    },\r\n\r\n    OnReplayClick(event, customEventData) {\r\n        cc.director.loadScene(Global.GameData.LastSceneName);\r\n    },\r\n\r\n    OnNextClick(event, customEventData) {\r\n        if (Global.GameData.PlayedGameCount < Global.GameData.ScheduledGames.length) {\r\n            cc.director.loadScene(\"GameScene\" + Global.GameData.ScheduledGames[Global.GameData.PlayedGameCount.toString()]);\r\n        }\r\n    },\r\n    // update (dt) {},\r\n});\r\n"]}