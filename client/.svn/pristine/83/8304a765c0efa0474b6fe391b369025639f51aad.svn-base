{"version":3,"sources":["MainMenuControl.js"],"names":["cc","Class","extends","Component","properties","RedPoint","default","type","Label","BluePoint","GameIcons","Node","GameIconSprites","SpriteFrame","StartSprite","IsSelectPanelOn","SelectedGamePanel","SelectGameSwitch","GameListPanel","ScheduleGameParent","currentSelectedIndex","start","InitData","i","getChildByName","getComponent","string","Global","GameData","AllGames","displayName","PlayedGameCount","toString","SetScheduler","log","ScheduledGames","length","find","active","color","Sprite","spriteFrame","TotalGameCount","Color","ORANGE","Button","enabled","GRAY","OnSelectGameClicked","event","customEventData","action","moveBy","runAction","OnScheduledGameClicked","OnGameIconClicked","tmpIndex","indexOf","MaxChooseCount","push","splice","OnPlayThisClick","IsPlayForFun","ResultArray","LastSceneName","director","loadScene","OnCloseSelectedPanelButton"],"mappings":"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","file":"MainMenuControl.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Scripts\\Control\\MainMenu","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        RedPoint:\r\n        {\r\n            default:null,\r\n            type:cc.Label,\r\n        },\r\n        BluePoint:\r\n        {\r\n            default:null,\r\n            type:cc.Label,\r\n        },\r\n\r\n        GameIcons:\r\n        {\r\n            default: [],\r\n            type: [cc.Node],\r\n\r\n        },\r\n        GameIconSprites:\r\n        {\r\n            default: [],\r\n            type: [cc.SpriteFrame],\r\n        },\r\n        StartSprite:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        IsSelectPanelOn:\r\n        {\r\n            default: false,\r\n        },\r\n        SelectedGamePanel:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        SelectGameSwitch:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        GameListPanel:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        ScheduleGameParent:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        currentSelectedIndex: -1,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start() {\r\n        this.InitData();\r\n    },\r\n\r\n    InitData: function () {\r\n        //初始化游戏图标\r\n        for (var i = 0; i < 8; i++) {\r\n            this.GameIcons[i].getChildByName(\"Name\").getComponent(cc.Label).string = Global.GameData.AllGames[i].displayName;\r\n        }\r\n        Global.GameData.PlayedGameCount = 0;\r\n        this.RedPoint.string = Global.GameData.RedPoint.toString();\r\n        this.BluePoint.string = Global.GameData.BluePoint.toString();\r\n        this.SetScheduler();\r\n    },\r\n\r\n    //设置排上日程的游戏列表\r\n    SetScheduler: function () {\r\n        cc.log(\"Setting Scheduler\");\r\n        //设置已选\r\n        for (var i = 0; i < Global.GameData.ScheduledGames.length; i++) {\r\n            //设置底部游戏列表\r\n            cc.find(\"List/\" + Global.GameData.ScheduledGames[i].toString() + \"/Mark\", this.GameListPanel).active = true;\r\n            cc.find(\"List/\" + Global.GameData.ScheduledGames[i].toString() + \"/Name\", this.GameListPanel).getComponent(cc.Label).color = new cc.color(255, 255, 255, 255);\r\n\r\n            //设置中部游戏日程表\r\n\r\n            cc.find(i.toString() + \"/Icon\", this.ScheduleGameParent).getComponent(cc.Sprite).spriteFrame = this.GameIconSprites[Global.GameData.ScheduledGames[i]];\r\n            cc.find(i.toString() + \"/Name\", this.ScheduleGameParent).getComponent(cc.Label).string = Global.GameData.AllGames[Global.GameData.ScheduledGames[i]].displayName;\r\n            cc.find(i.toString() + \"/Icon\", this.ScheduleGameParent).active = true;\r\n            cc.find(i.toString() + \"/Name\", this.ScheduleGameParent).active = true;\r\n\r\n\r\n\r\n        }\r\n        //设置未选\r\n\r\n        //验证是否满足开始条件\r\n        if (Global.GameData.ScheduledGames.length >= Global.GameData.TotalGameCount) {\r\n            this.StartSprite.color = cc.Color.ORANGE;\r\n            this.StartSprite.getComponent(cc.Button).enabled = true;\r\n        }\r\n        else {\r\n            this.StartSprite.color = cc.Color.GRAY;\r\n            this.StartSprite.getComponent(cc.Button).enabled = false;\r\n        }\r\n\r\n    },\r\n    //下方游戏列表单元点击\r\n    OnSelectGameClicked(event, customEventData) {\r\n        if (this.IsSelectPanelOn) {\r\n            var action = cc.moveBy(0.3, 0, -300);\r\n            this.GameListPanel.getChildByName(\"Mask\").active = false;\r\n            this.GameListPanel.runAction(action);\r\n            this.IsSelectPanelOn = false;\r\n            this.SelectGameSwitch.getChildByName(\"Label\").getComponent(cc.Label).string = \"选择游戏\";\r\n        }\r\n        else {\r\n            var action = cc.moveBy(0.3, 0, 300);\r\n            this.GameListPanel.getChildByName(\"Mask\").active = true;\r\n            this.GameListPanel.runAction(action);\r\n            this.IsSelectPanelOn = true;\r\n            this.SelectGameSwitch.getChildByName(\"Label\").getComponent(cc.Label).string = \"我选好了\";\r\n        }\r\n    },\r\n\r\n    //已安排游戏点击\r\n    OnScheduledGameClicked(event, customEventData) {\r\n        this.currentSelectedIndex = Global.GameData.ScheduledGames[customEventData];\r\n        this.SelectedGamePanel.active = true;\r\n        cc.find(\"IconPanel/Icon\", this.SelectedGamePanel).getComponent(cc.Sprite).spriteFrame = this.GameIconSprites[this.currentSelectedIndex];\r\n        cc.find(\"SelectedGameName\", this.SelectedGamePanel).getComponent(cc.Label).string = Global.GameData.AllGames[this.currentSelectedIndex].displayName;\r\n    },\r\n\r\n    OnGameIconClicked(event, customEventData) {\r\n        cc.log(customEventData);\r\n        if (this.IsSelectPanelOn) {\r\n            var tmpIndex = Global.GameData.ScheduledGames.indexOf(customEventData);\r\n            if (customEventData <= 2) //没完工的游戏先不往上放\r\n            {\r\n                if (Global.GameData.ScheduledGames.length < Global.GameData.MaxChooseCount) {//还可以接着选\r\n                    if (tmpIndex == -1) //原先没有就加\r\n                    {\r\n                        Global.GameData.ScheduledGames.push(customEventData);\r\n                    }\r\n                    else//原先有就删\r\n                    {\r\n                        Global.GameData.ScheduledGames.splice(tmpIndex, 1);\r\n                    }\r\n                    this.SetScheduler();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    },\r\n\r\n    OnPlayThisClick(event, customEventData) {\r\n        Global.GameData.TotalGameCount = 7;\r\n        Global.GameData.IsPlayForFun = true;\r\n        Global.GameData.ResultArray = [];\r\n        Global.GameData.LastSceneName = \"GameScene\" + this.currentSelectedIndex.toString();\r\n        cc.director.loadScene(\"GameScene\" + this.currentSelectedIndex.toString());\r\n    },\r\n\r\n    OnCloseSelectedPanelButton(event, customEventData) {\r\n        this.SelectedGamePanel.active = false;\r\n\r\n    },\r\n    // update (dt) {},\r\n});\r\n"]}