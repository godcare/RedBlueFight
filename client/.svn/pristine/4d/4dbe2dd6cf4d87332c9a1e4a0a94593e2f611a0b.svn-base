(function() {"use strict";var __module = CC_EDITOR ? module : {exports:{}};var __filename = 'preview-scripts/assets/Scripts/Control/Games/Game18/Game18TouchBlue.js';var __require = CC_EDITOR ? function (request) {return cc.require(request, require);} : function (request) {return cc.require(request, __filename);};function __define (exports, require, module) {"use strict";
cc._RF.push(module, '9341acCPs1KAo7wMkK2LkLC', 'Game18TouchBlue', __filename);
// Scripts/Control/Games/Game18/Game18TouchBlue.js

"use strict";

// Learn cc.Class:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html
var Game18Control = require("Game18Control");
cc.Class({
    extends: cc.Component,

    properties: {
        // foo: {
        //     // ATTRIBUTES:
        //     default: null,        // The default value will be used only when the component attaching
        //                           // to a node for the first time
        //     type: cc.SpriteFrame, // optional, default is typeof default
        //     serializable: true,   // optional, default is true
        // },
        // bar: {
        //     get () {
        //         return this._bar;
        //     },
        //     set (value) {
        //         this._bar = value;
        //     }
        // },
    },

    // LIFE-CYCLE CALLBACKS:

    // onLoad () {},

    start: function start() {
        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (event) {
            // this.opacity = 255;
            if (cc.find("Canvas").getComponent(Game18Control).GameStatus == 1) {
                var delta = event.touch.getDelta();
                var pos = event.touch.getLocation();
                cc.log(pos + " " + delta);
                //如果是朝右滑动
                if (delta.x > 0) {
                    if (pos.y < 1010) {
                        cc.find("Canvas").getComponent(Game18Control).onRotate(1, Math.sqrt(delta.x * delta.x + delta.y * delta.y));
                    } else {
                        cc.find("Canvas").getComponent(Game18Control).onRotate(1, -Math.sqrt(delta.x * delta.x + delta.y * delta.y));
                    }
                } else {
                    if (pos.y > 1010) {
                        cc.find("Canvas").getComponent(Game18Control).onRotate(1, Math.sqrt(delta.x * delta.x + delta.y * delta.y));
                    } else {
                        cc.find("Canvas").getComponent(Game18Control).onRotate(1, -Math.sqrt(delta.x * delta.x + delta.y * delta.y));
                    }
                }
            }
        }, this.node);

        this.node.on(cc.Node.EventType.TOUCH_END, function (event) {
            cc.find("Canvas").getComponent(Game18Control).onRotate(1, 0);
        }, this.node);
    }
}

// update (dt) {},
);

cc._RF.pop();
        }
        if (CC_EDITOR) {
            __define(__module.exports, __require, __module);
        }
        else {
            cc.registerModuleFunc(__filename, function () {
                __define(__module.exports, __require, __module);
            });
        }
        })();
        //# sourceMappingURL=Game18TouchBlue.js.map
        