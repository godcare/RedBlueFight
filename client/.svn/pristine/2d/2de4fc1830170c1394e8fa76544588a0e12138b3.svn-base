// Learn cc.Class:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html
var Game7Control = require("Game7Control");
cc.Class({
    extends: cc.Component,

    properties: {
        // foo: {
        //     // ATTRIBUTES:
        //     default: null,        // The default value will be used only when the component attaching
        //                           // to a node for the first time
        //     type: cc.SpriteFrame, // optional, default is typeof default
        //     serializable: true,   // optional, default is true
        // },
        // bar: {
        //     get () {
        //         return this._bar;
        //     },
        //     set (value) {
        //         this._bar = value;
        //     }
        // },
    },

    // LIFE-CYCLE CALLBACKS:

    // onLoad () {},

    start() {
        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (event) {
            // this.opacity = 255;

            var delta = event.touch.getDelta();
            cc.log("Touched");
            if (cc.find("Canvas").getComponent(Game7Control).UnTouchList.indexOf(this.name) == -1 && cc.find("Canvas").getComponent(Game7Control).MovedList.indexOf(this.name)) {
                if (this.y <= 85) {
                    this.x += delta.x;
                    this.y += delta.y;
                    cc.find("Canvas").getComponent(Game7Control).bmoveDelta = delta;
                }
                else {
                    if (cc.find("Canvas").getComponent(Game7Control).MovedList.indexOf(this.name) == -1) {
                        this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(cc.find("Canvas").getComponent(Game7Control).bmoveDelta.x * 8, cc.find("Canvas").getComponent(Game7Control).bmoveDelta.y * 8);
                        cc.find("Canvas").getComponent(Game7Control).MovedList.push(this.name);
                    }

                }
            }
            // cc.log("move:" + this.name);
        }, this.node);
    },

    // update (dt) {},
});
