{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\Scripts\\Control\\Games\\Game11/assets\\Scripts\\Control\\Games\\Game11\\Game11Control.js"],"names":["SoundManager","require","MySpriteNumber","cc","Class","extends","Component","properties","SoundMGR","default","type","GameResultNode","Node","CountDownNode","PauseNode","redRope","blueRope","GameStatus","rSpeed","bSpeed","rLength","bLength","maxLength","minLength","minSpeed","lengthChangeSpeed","redEar","blueEar","redHit","blueHit","pPre","rflag","bflag","spawnIndex","maxPontNumber","spawnParent","redScore","blueScore","redTouchPanel","redScoreNumber","redScoreTotalNumber","blueScoreNumber","blueScoreTotalNumber","onLoad","director","getPhysicsManager","enabled","start","startAnimation","scheduleOnce","active","SpawnNewPoint","schedule","update","dt","width","rate","rotation","x","y","rate1","OnTouchPanelStart","touchName","OnTouchPanelEnd","OnBallHit","ballName","hitName","log","indexOf","find","destroy","playScore","setNumber","playOver","Global","GameData","CurrentWinner","ballCount","i","getChildren","length","newObj","instantiate","parent","Math","random","name","toString","playBlob"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,eAAeC,QAAQ,cAAR,CAAnB;AACA,IAAIC,iBAAiBD,QAAQ,gBAAR,CAArB;AACAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,kBACA;AACIC,qBAAS,IADb;AAEIC,kBAAMV;AAFV,SAjBQ;AAqBRW,wBACA;AACIF,qBAAS,IADb;AAEIC,kBAAMP,GAAGS;AAFb,SAtBQ;AA0BRC,uBACA;AACIJ,qBAAS,IADb;AAEIC,kBAAMP,GAAGS;AAFb,SA3BQ;AA+BRE,mBACA;AACIL,qBAAS,IADb;AAEIC,kBAAMP,GAAGS;AAFb,SAhCQ;AAoCRG,iBACA;AACIN,qBAAS,IADb;AAEIC,kBAAMP,GAAGS;AAFb,SArCQ;AAyCRI,kBACA;AACIP,qBAAS,IADb;AAEIC,kBAAMP,GAAGS;AAFb,SA1CQ;AA8CRK,oBAAY,CA9CJ,EA8CM;AACdC,gBAAQ,CA/CA;AAgDRC,gBAAQ,CAhDA;AAiDRC,iBAAS,GAjDD;AAkDRC,iBAAS,GAlDD;AAmDRC,mBAAW,GAnDH;AAoDRC,mBAAW,EApDH;AAqDRC,kBAAU,EArDF;AAsDRC,2BAAmB,GAtDX;AAuDRC,gBACA;AACIjB,qBAAS,IADb;AAEIC,kBAAMP,GAAGS;AAFb,SAxDQ;AA4DRe,iBACA;AACIlB,qBAAS,IADb;AAEIC,kBAAMP,GAAGS;AAFb,SA7DQ;AAiERgB,gBACA;AACInB,qBAAS,IADb;AAEIC,kBAAMP,GAAGS;AAFb,SAlEQ;AAsERiB,iBACA;AACIpB,qBAAS,IADb;AAEIC,kBAAMP,GAAGS;AAFb,SAvEQ;AA2ERkB,cACA;AACIrB,qBAAS,IADb;AAEIC,kBAAMP,GAAGS;AAFb,SA5EQ;AAgFRmB,eAAO,CAAC,CAhFA;AAiFRC,eAAO,CAAC,CAjFA;AAkFRC,oBAAY,CAlFJ;AAmFRC,uBAAe,EAnFP;AAoFRC,qBACA;AACI1B,qBAAS,IADb;AAEIC,kBAAMP,GAAGS;AAFb,SArFQ;AAyFRwB,kBAAU,CAzFF;AA0FRC,mBAAW,CA1FH;AA2FRC,uBACA;AACI7B,qBAAS,IADb;AAEIC,kBAAMP,GAAGS;AAFb,SA5FQ;AAgGR2B,wBACA;AACI9B,qBAAS,IADb;AAEIC,kBAAMR;AAFV,SAjGQ;AAqGRsC,6BACA;AACI/B,qBAAS,IADb;AAEIC,kBAAMR;AAFV,SAtGQ;AA0GRuC,yBACA;AACIhC,qBAAS,IADb;AAEIC,kBAAMR;AAFV,SA3GQ;AA+GRwC,8BACA;AACIjC,qBAAS,IADb;AAEIC,kBAAMR;AAFV;AAhHQ,KAHP;;AAyHL;;AAEAyC,UA3HK,oBA2HI;AACLxC,WAAGyC,QAAH,CAAYC,iBAAZ,GAAgCC,OAAhC,GAA0C,IAA1C;AACH,KA7HI;AA+HLC,SA/HK,mBA+HG;AACJ;AACA,aAAKC,cAAL;AAEH,KAnII;AAoILA,kBApIK,4BAoIY;;AAEb,aAAKC,YAAL,CAAkB,YAAY;AAC1B,iBAAKpC,aAAL,CAAmBqC,MAAnB,GAA4B,IAA5B;AACH,SAFD,EAEG,GAFH;AAGA,aAAKD,YAAL,CAAkB,YAAY;AAC1B,iBAAKhC,UAAL,GAAkB,CAAlB;AACA,iBAAKH,SAAL,CAAeoC,MAAf,GAAwB,IAAxB;AACA,iBAAKC,aAAL,CAAmB,CAAnB;AACA,iBAAKnC,QAAL,CAAckC,MAAd,GAAuB,IAAvB;AACA,iBAAKnC,OAAL,CAAamC,MAAb,GAAsB,IAAtB;AACA,iBAAKE,QAAL,CAAc,YAAY;AACtB,qBAAKD,aAAL,CAAmB,CAAnB;AACH,aAFD,EAEG,CAFH;AAGH,SATD,EASG,GATH;AAWH,KApJI;AAsJLE,UAtJK,kBAsJEC,EAtJF,EAsJM;AACP,YAAI,KAAKrC,UAAL,IAAmB,CAAvB,EAA0B;AACtB;AACA,iBAAKG,OAAL,IAAgBkC,KAAK,KAAK7B,iBAAV,GAA8B,KAAKM,KAAnD;AACA,gBAAI,KAAKX,OAAL,GAAe,KAAKG,SAAxB,EAAmC;AAC/B,qBAAKH,OAAL,GAAe,KAAKG,SAApB;AAEH,aAHD,MAIK,IAAI,KAAKH,OAAL,GAAe,KAAKE,SAAxB,EAAmC;AACpC,qBAAKF,OAAL,GAAe,KAAKE,SAApB;AAEH;AACD,iBAAKP,OAAL,CAAawC,KAAb,GAAqB,KAAKnC,OAA1B;AACA,gBAAIoC,OAAO,KAAKlC,SAAL,GAAiB,KAAKF,OAAjC;AACAoC,oBAAQA,IAAR;AACA,gBAAIA,OAAO,EAAX,EAAe;AACXA,uBAAO,EAAP;AACH,aAFD,MAGK,IAAIA,OAAO,CAAX,EAAc;AACfA,uBAAO,CAAP;AACH;AACD,iBAAKtC,MAAL,GAAc,KAAKM,QAAL,GAAgBgC,IAA9B;AACA,iBAAKzC,OAAL,CAAa0C,QAAb,IAAyBH,KAAK,KAAKpC,MAAnC;AACA,iBAAKQ,MAAL,CAAYgC,CAAZ,GAAgB,KAAKtC,OAAL,GAAe,EAA/B;AACA,iBAAKQ,MAAL,CAAY8B,CAAZ,GAAgB,KAAKhC,MAAL,CAAYgC,CAA5B;AACA,iBAAK9B,MAAL,CAAY+B,CAAZ,GAAgB,KAAKjC,MAAL,CAAYiC,CAA5B;;AAEA;AACA,iBAAKtC,OAAL,IAAgBiC,KAAK,KAAK7B,iBAAV,GAA8B,KAAKO,KAAnD;AACA,gBAAI,KAAKX,OAAL,GAAe,KAAKE,SAAxB,EAAmC;AAC/B,qBAAKF,OAAL,GAAe,KAAKE,SAApB;AAEH,aAHD,MAIK,IAAI,KAAKF,OAAL,GAAe,KAAKC,SAAxB,EAAmC;AACpC,qBAAKD,OAAL,GAAe,KAAKC,SAApB;AAEH;AACD,iBAAKN,QAAL,CAAcuC,KAAd,GAAsB,KAAKlC,OAA3B;AACA,gBAAIuC,QAAQ,KAAKtC,SAAL,GAAiB,KAAKD,OAAlC;AACAuC,qBAASA,KAAT;AACA,gBAAIA,QAAQ,EAAZ,EAAgB;AACZA,wBAAQ,EAAR;AACH,aAFD,MAGK,IAAIA,QAAQ,CAAZ,EAAe;AAChBA,wBAAQ,CAAR;AACH;AACD,iBAAKzC,MAAL,GAAc,KAAKK,QAAL,GAAgBoC,KAA9B;AACA,iBAAK5C,QAAL,CAAcyC,QAAd,IAA0BH,KAAK,KAAKnC,MAApC;AACA,iBAAKQ,OAAL,CAAa+B,CAAb,GAAiB,KAAKrC,OAAL,GAAe,EAAhC;AACA,iBAAKQ,OAAL,CAAa6B,CAAb,GAAiB,KAAK/B,OAAL,CAAa+B,CAA9B;AACA,iBAAK7B,OAAL,CAAa8B,CAAb,GAAiB,KAAKhC,OAAL,CAAagC,CAA9B;AACH;AACJ,KA1MI;AA4MLE,qBA5MK,6BA4MaC,SA5Mb,EA4MwB;AACzB,YAAIA,aAAa,UAAjB,EAA6B;AACzB,iBAAK/B,KAAL,GAAa,CAAC,GAAd;AACH,SAFD,MAGK,IAAI+B,aAAa,WAAjB,EAA8B;AAC/B,iBAAK9B,KAAL,GAAa,CAAC,GAAd;AACH;AACJ,KAnNI;AAqNL+B,mBArNK,2BAqNWD,SArNX,EAqNsB;AACvB,YAAIA,aAAa,UAAjB,EAA6B;AACzB,iBAAK/B,KAAL,GAAa,GAAb;AACH,SAFD,MAGK,IAAI+B,aAAa,WAAjB,EAA8B;AAC/B,iBAAK9B,KAAL,GAAa,GAAb;AACH;AACJ,KA5NI;AA8NLgC,aA9NK,qBA8NKC,QA9NL,EA8NeC,OA9Nf,EA8NwB;AACzB/D,WAAGgE,GAAH,CAAOF,WAAW,OAAX,GAAqBC,OAA5B;AACA,YAAI,KAAKjD,UAAL,IAAmB,CAAvB,EAA0B;AACtB,gBAAIgD,YAAY,QAAZ,IAAwBC,QAAQE,OAAR,CAAgB,OAAhB,IAA2B,CAAC,CAAxD,EAA2D;AACvDjE,mBAAGkE,IAAH,CAAQH,OAAR,EAAiB,KAAK/B,WAAtB,EAAmCmC,OAAnC;AACA,qBAAKlC,QAAL,IAAiB,CAAjB;AACA,qBAAK5B,QAAL,CAAc+D,SAAd;AACA,qBAAKhC,cAAL,CAAoBiC,SAApB,CAA8B,KAAKpC,QAAnC;AACA,oBAAI,KAAKA,QAAL,IAAiB,EAArB,EAAyB;AACrB,yBAAKnB,UAAL,GAAkB,CAAlB;AACA,yBAAKT,QAAL,CAAciE,QAAd;AACA,yBAAKxB,YAAL,CAAkB,YAClB;AACIyB,+BAAOC,QAAP,CAAgBC,aAAhB,GAAgC,CAAhC;AACA,6BAAKjE,cAAL,CAAoBuC,MAApB,GAA6B,IAA7B;AACH,qBAJD,EAIE,CAJF;AAKH;AACD;AACA;AACA;AAEH,aAlBD,MAmBK,IAAIe,YAAY,SAAZ,IAAyBC,QAAQE,OAAR,CAAgB,OAAhB,IAA2B,CAAC,CAAzD,EAA4D;AAC7DjE,mBAAGkE,IAAH,CAAQH,OAAR,EAAiB,KAAK/B,WAAtB,EAAmCmC,OAAnC;AACA,qBAAKjC,SAAL,IAAkB,CAAlB;AACA,qBAAK7B,QAAL,CAAc+D,SAAd;AACA,qBAAK9B,eAAL,CAAqB+B,SAArB,CAA+B,KAAKnC,SAApC;AACA,oBAAI,KAAKA,SAAL,IAAkB,EAAtB,EAA0B;AACtB,yBAAKpB,UAAL,GAAkB,CAAlB;AACA,yBAAKT,QAAL,CAAciE,QAAd;AACA,yBAAKxB,YAAL,CAAkB,YAClB;AACIyB,+BAAOC,QAAP,CAAgBC,aAAhB,GAAgC,CAAhC;AACA,6BAAKjE,cAAL,CAAoBuC,MAApB,GAA6B,IAA7B;AACH,qBAJD,EAIE,CAJF;AAKH;AACD;AACA;AACA;AACH;AACJ;AACJ,KAvQI;AAyQLC,iBAzQK,yBAyQS0B,SAzQT,EAyQoB;AACrB,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,SAApB,EAA+BC,GAA/B,EAAoC;AAChC,gBAAI,KAAK3C,WAAL,CAAiB4C,WAAjB,GAA+BC,MAA/B,GAAwC,KAAK9C,aAAjD,EAAgE;AAC5D,qBAAKD,UAAL,IAAmB,CAAnB;AACA,oBAAIgD,SAAS9E,GAAG+E,WAAH,CAAe,KAAKpD,IAApB,CAAb;AACAmD,uBAAOE,MAAP,GAAgB,KAAKhD,WAArB;AACA8C,uBAAOvB,CAAP,GAAW,CAAC0B,KAAKC,MAAL,KAAgB,GAAjB,IAAwB,GAAnC;AACAJ,uBAAOtB,CAAP,GAAW,CAACyB,KAAKC,MAAL,KAAgB,GAAjB,IAAwB,GAAnC;AACA;AACAJ,uBAAOK,IAAP,GAAc,UAAU,KAAKrD,UAAL,CAAgBsD,QAAhB,EAAxB;AACAN,uBAAO/B,MAAP,GAAgB,IAAhB;AACA,qBAAK1C,QAAL,CAAcgF,QAAd;AACH;AACJ;AACJ;AAvRI,CAAT","file":"Game11Control.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\Scripts\\Control\\Games\\Game11","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar SoundManager = require(\"SoundManager\");\r\nvar MySpriteNumber = require(\"MySpriteNumber\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        SoundMGR:\r\n        {\r\n            default: null,\r\n            type: SoundManager,\r\n        },\r\n        GameResultNode:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        CountDownNode:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        PauseNode:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        redRope:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        blueRope:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        GameStatus: 0,//0未开始，1开始了，2结束了\r\n        rSpeed: 0,\r\n        bSpeed: 0,\r\n        rLength: 275,\r\n        bLength: 275,\r\n        maxLength: 275,\r\n        minLength: 60,\r\n        minSpeed: 50,\r\n        lengthChangeSpeed: 100,\r\n        redEar:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        blueEar:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        redHit:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        blueHit:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        pPre:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        rflag: -1,\r\n        bflag: -1,\r\n        spawnIndex: 0,\r\n        maxPontNumber: 10,\r\n        spawnParent:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        redScore: 0,\r\n        blueScore: 0,\r\n        redTouchPanel:\r\n        {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        redScoreNumber:\r\n        {\r\n            default: null,\r\n            type: MySpriteNumber,\r\n        },\r\n        redScoreTotalNumber:\r\n        {\r\n            default: null,\r\n            type: MySpriteNumber,\r\n        },\r\n        blueScoreNumber:\r\n        {\r\n            default: null,\r\n            type: MySpriteNumber,\r\n        },\r\n        blueScoreTotalNumber:\r\n        {\r\n            default: null,\r\n            type: MySpriteNumber,\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        cc.director.getPhysicsManager().enabled = true;\r\n    },\r\n\r\n    start() {\r\n        // this.redScoreTotalNumber.setNumber(20);\r\n        this.startAnimation();\r\n\r\n    },\r\n    startAnimation() {\r\n\r\n        this.scheduleOnce(function () {\r\n            this.CountDownNode.active = true;\r\n        }, 0.5)\r\n        this.scheduleOnce(function () {\r\n            this.GameStatus = 1;\r\n            this.PauseNode.active = true;\r\n            this.SpawnNewPoint(2);\r\n            this.blueRope.active = true;\r\n            this.redRope.active = true;\r\n            this.schedule(function () {\r\n                this.SpawnNewPoint(2);\r\n            }, 1)\r\n        }, 4.5);\r\n\r\n    },\r\n\r\n    update(dt) {\r\n        if (this.GameStatus == 1) {\r\n            //red rope process\r\n            this.rLength += dt * this.lengthChangeSpeed * this.rflag;\r\n            if (this.rLength < this.minLength) {\r\n                this.rLength = this.minLength;\r\n\r\n            }\r\n            else if (this.rLength > this.maxLength) {\r\n                this.rLength = this.maxLength;\r\n\r\n            }\r\n            this.redRope.width = this.rLength;\r\n            var rate = this.maxLength / this.rLength;\r\n            rate *= rate;\r\n            if (rate > 20) {\r\n                rate = 20;\r\n            }\r\n            else if (rate < 1) {\r\n                rate = 1;\r\n            }\r\n            this.rSpeed = this.minSpeed * rate;\r\n            this.redRope.rotation += dt * this.rSpeed;\r\n            this.redEar.x = this.rLength + 35;\r\n            this.redHit.x = this.redEar.x;\r\n            this.redHit.y = this.redEar.y;\r\n\r\n            //blue rope process\r\n            this.bLength += dt * this.lengthChangeSpeed * this.bflag;\r\n            if (this.bLength < this.minLength) {\r\n                this.bLength = this.minLength;\r\n\r\n            }\r\n            else if (this.bLength > this.maxLength) {\r\n                this.bLength = this.maxLength;\r\n\r\n            }\r\n            this.blueRope.width = this.bLength;\r\n            var rate1 = this.maxLength / this.bLength;\r\n            rate1 *= rate1;\r\n            if (rate1 > 20) {\r\n                rate1 = 20;\r\n            }\r\n            else if (rate1 < 1) {\r\n                rate1 = 1;\r\n            }\r\n            this.bSpeed = this.minSpeed * rate1;\r\n            this.blueRope.rotation += dt * this.bSpeed;\r\n            this.blueEar.x = this.bLength + 35;\r\n            this.blueHit.x = this.blueEar.x;\r\n            this.blueHit.y = this.blueEar.y;\r\n        }\r\n    },\r\n\r\n    OnTouchPanelStart(touchName) {\r\n        if (touchName == \"redTouch\") {\r\n            this.rflag = -1.5;\r\n        }\r\n        else if (touchName == \"blueTouch\") {\r\n            this.bflag = -1.5\r\n        }\r\n    },\r\n\r\n    OnTouchPanelEnd(touchName) {\r\n        if (touchName == \"redTouch\") {\r\n            this.rflag = 1.5;\r\n        }\r\n        else if (touchName == \"blueTouch\") {\r\n            this.bflag = 1.5;\r\n        }\r\n    },\r\n\r\n    OnBallHit(ballName, hitName) {\r\n        cc.log(ballName + \" hit \" + hitName);\r\n        if (this.GameStatus == 1) {\r\n            if (ballName == \"redHit\" && hitName.indexOf(\"pBall\") > -1) {\r\n                cc.find(hitName, this.spawnParent).destroy();\r\n                this.redScore += 1;\r\n                this.SoundMGR.playScore();\r\n                this.redScoreNumber.setNumber(this.redScore);\r\n                if (this.redScore >= 20) {\r\n                    this.GameStatus = 2;\r\n                    this.SoundMGR.playOver();\r\n                    this.scheduleOnce(function()\r\n                    {\r\n                        Global.GameData.CurrentWinner = 0;\r\n                        this.GameResultNode.active = true;\r\n                    },1);\r\n                }\r\n                // this.scheduleOnce(function () {\r\n                //     this.SpawnNewPoint(1);\r\n                // }, 1);\r\n\r\n            }\r\n            else if (ballName == \"blueHit\" && hitName.indexOf(\"pBall\") > -1) {\r\n                cc.find(hitName, this.spawnParent).destroy();\r\n                this.blueScore += 1;\r\n                this.SoundMGR.playScore();\r\n                this.blueScoreNumber.setNumber(this.blueScore);\r\n                if (this.blueScore >= 20) {\r\n                    this.GameStatus = 2;\r\n                    this.SoundMGR.playOver();\r\n                    this.scheduleOnce(function()\r\n                    {\r\n                        Global.GameData.CurrentWinner = 1;\r\n                        this.GameResultNode.active = true;\r\n                    },1);\r\n                }\r\n                // this.scheduleOnce(function () {\r\n                //     this.SpawnNewPoint(1);\r\n                // }, 1);\r\n            }\r\n        }\r\n    },\r\n\r\n    SpawnNewPoint(ballCount) {\r\n        for (var i = 0; i < ballCount; i++) {\r\n            if (this.spawnParent.getChildren().length < this.maxPontNumber) {\r\n                this.spawnIndex += 1;\r\n                var newObj = cc.instantiate(this.pPre);\r\n                newObj.parent = this.spawnParent;\r\n                newObj.x = (Math.random() - 0.5) * 550;\r\n                newObj.y = (Math.random() - 0.5) * 550;\r\n                // cc.log(newObj.x + \":\" + newObj.y);\r\n                newObj.name = \"pBall\" + this.spawnIndex.toString();\r\n                newObj.active = true;\r\n                this.SoundMGR.playBlob();\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n});\r\n"]}