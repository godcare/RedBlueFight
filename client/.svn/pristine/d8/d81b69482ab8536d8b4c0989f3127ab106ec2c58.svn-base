(function() {"use strict";var __module = CC_EDITOR ? module : {exports:{}};var __filename = 'preview-scripts/assets/Scripts/Control/Games/Game8/Game8DragMoveBlue.js';var __require = CC_EDITOR ? function (request) {return cc.require(request, require);} : function (request) {return cc.require(request, __filename);};function __define (exports, require, module) {"use strict";
cc._RF.push(module, 'b8cd1RjJ/dF1q6CJ2diFWQl', 'Game8DragMoveBlue', __filename);
// Scripts/Control/Games/Game8/Game8DragMoveBlue.js

"use strict";

// Learn cc.Class:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html
var Game8Control = require("Game8Control");
cc.Class({
    extends: cc.Component,

    properties: {
        // foo: {
        //     // ATTRIBUTES:
        //     default: null,        // The default value will be used only when the component attaching
        //                           // to a node for the first time
        //     type: cc.SpriteFrame, // optional, default is typeof default
        //     serializable: true,   // optional, default is true
        // },
        // bar: {
        //     get () {
        //         return this._bar;
        //     },
        //     set (value) {
        //         this._bar = value;
        //     }
        // },
    },

    // LIFE-CYCLE CALLBACKS:

    // onLoad () {},
    start: function start() {
        this.node.on(cc.Node.EventType.TOUCH_START, function (event) {
            // this.SoundMGR.playVoice();
            cc.find("Canvas").getComponent(Game8Control).onTouchStart();
        }, this.node);
        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (event) {
            // this.opacity = 255;

            var delta = event.touch.getDelta();
            cc.log(this.y);
            if (cc.find("Canvas").getComponent(Game8Control).blueCheckList.indexOf(this.name) == -1) {
                if (this.y >= -100) {
                    this.x += delta.x;
                    this.y += delta.y;
                    cc.find("Canvas").getComponent(Game8Control).bmoveDelta = delta;
                } else {
                    if (cc.find("Canvas").getComponent(Game8Control).blueCheckList.indexOf(this.name) == -1) {
                        this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(cc.find("Canvas").getComponent(Game8Control).bmoveDelta.x * 15, cc.find("Canvas").getComponent(Game8Control).bmoveDelta.y * 15);
                        cc.find("Canvas").getComponent(Game8Control).blueCheckList.push(this.name);
                        cc.find("Canvas").getComponent(Game8Control).onCheckBall(this.name, this.parent.name);
                        // cc.find("Canvas").getComponent(Game7Control).isNewBallGenerated = false;
                        // this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(delta.x * 20, delta.y * 20);
                    }
                }
            }
            // cc.log("move:" + this.name);
        }, this.node);
    },


    onBeginContact: function onBeginContact(contact, selfCollider, otherCollider) {
        // cc.log("Hit " + otherCollider.node.name);
        cc.find("Canvas").getComponent(Game8Control).onBallHit(selfCollider.node.name, otherCollider.node.name, selfCollider.node.parent.name);
    }
});

cc._RF.pop();
        }
        if (CC_EDITOR) {
            __define(__module.exports, __require, __module);
        }
        else {
            cc.registerModuleFunc(__filename, function () {
                __define(__module.exports, __require, __module);
            });
        }
        })();
        //# sourceMappingURL=Game8DragMoveBlue.js.map
        