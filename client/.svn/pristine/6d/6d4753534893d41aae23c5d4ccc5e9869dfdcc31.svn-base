{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\Scripts\\Control\\Games\\Game7/assets\\Scripts\\Control\\Games\\Game7\\Game7Control.js"],"names":["cc","Class","extends","Component","properties","bmoveDelta","default","Vec2","rmoveDelta","UnTouchList","MovedList","Distance4","Distance3","Distance2","Distance1","redBalls","type","Node","blueBalls","onLoad","director","getPhysicsManager","enabled","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,oBACA;AACIC,qBAAS,IAAIN,GAAGO,IAAP;AADb,SAjBQ;AAoBRC,oBACA;AACIF,qBAAS,IAAIN,GAAGO,IAAP;AADb,SArBQ;AAwBRE,qBACA;AACIH,qBAAS;AADb,SAzBQ;AA4BRI,mBACA;AACIJ,qBAAS;AADb,SA7BQ;AAgCRK,mBAAW,EAhCH;AAiCRC,mBAAW,EAjCH;AAkCRC,mBAAW,EAlCH;AAmCRC,mBAAW,EAnCH;AAoCRC,kBACA;AACIT,qBAAS,EADb;AAEIU,kBAAM,CAAChB,GAAGiB,IAAJ;AAFV,SArCQ;AAyCRC,mBACA;AACIZ,qBAAS,EADb;AAEIU,kBAAM,CAAChB,GAAGiB,IAAJ;AAFV;AA1CQ,KAHP;;AAmDL;;AAEA;AACAE,UAtDK,oBAsDI;AACLnB,WAAGoB,QAAH,CAAYC,iBAAZ,GAAgCC,OAAhC,GAA0C,IAA1C;AAEH,KAzDI;AA0DLC,SA1DK,mBA0DG,CAEP;AA5DI;;AA8DL;AA9DJ","file":"Game7Control.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\Scripts\\Control\\Games\\Game7","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        bmoveDelta:\r\n        {\r\n            default: new cc.Vec2(),\r\n        },\r\n        rmoveDelta:\r\n        {\r\n            default: new cc.Vec2(),\r\n        },\r\n        UnTouchList:\r\n        {\r\n            default: [],\r\n        },\r\n        MovedList:\r\n        {\r\n            default: [],\r\n        },\r\n        Distance4: 10,\r\n        Distance3: 20,\r\n        Distance2: 30,\r\n        Distance1: 40,\r\n        redBalls:\r\n        {\r\n            default: [],\r\n            type: [cc.Node],\r\n        },\r\n        blueBalls:\r\n        {\r\n            default: [],\r\n            type: [cc.Node],\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n    onLoad() {\r\n        cc.director.getPhysicsManager().enabled = true;\r\n\r\n    },\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}