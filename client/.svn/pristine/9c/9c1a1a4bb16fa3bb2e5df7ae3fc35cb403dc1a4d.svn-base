{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\Scripts\\Control\\Games\\Game10/assets\\Scripts\\Control\\Games\\Game10\\Game10DragMove.js"],"names":["Game10Control","require","cc","Class","extends","Component","properties","start","node","on","Node","EventType","TOUCH_MOVE","event","find","getComponent","GameStatus","delta","touch","getDelta","x","RigidBody","linearVelocity","Vec2","update","dt","onBeginContact","contact","selfCollider","otherCollider","OnPanelHitBorder","name"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,gBAAgBC,QAAQ,eAAR,CAApB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;;AAqBL;;AAEA;;AAEAC,SAzBK,mBAyBG;AACJ,aAAKC,IAAL,CAAUC,EAAV,CAAaP,GAAGQ,IAAH,CAAQC,SAAR,CAAkBC,UAA/B,EAA2C,UAAUC,KAAV,EAAiB;AACxD;AACA,gBAAIX,GAAGY,IAAH,CAAQ,QAAR,EAAkBC,YAAlB,CAA+Bf,aAA/B,EAA8CgB,UAA9C,IAA4D,CAAhE,EAAmE;AAC/D,oBAAIC,QAAQJ,MAAMK,KAAN,CAAYC,QAAZ,EAAZ;AACA,oBAAI,KAAKC,CAAL,IAAU,CAAC,GAAX,IAAkB,KAAKA,CAAL,IAAU,GAAhC,EAAqC;AACjC,yBAAKA,CAAL,IAAUH,MAAMG,CAAhB;AACA,yBAAKL,YAAL,CAAkBb,GAAGmB,SAArB,EAAgCC,cAAhC,GAAiD,IAAIpB,GAAGqB,IAAP,CAAYN,MAAMG,CAAN,GAAU,CAAtB,EAAyB,CAAzB,CAAjD;AACH,iBAHD,MAIK,IAAK,KAAKA,CAAL,GAASH,MAAMG,CAAhB,GAAqB,CAAC,GAAtB,IAA8B,KAAKA,CAAL,GAASH,MAAMG,CAAhB,GAAqB,GAAtD,EAA2D;AAC5D,yBAAKA,CAAL,IAAUH,MAAMG,CAAhB;AACA,yBAAKL,YAAL,CAAkBb,GAAGmB,SAArB,EAAgCC,cAAhC,GAAiD,IAAIpB,GAAGqB,IAAP,CAAYN,MAAMG,CAAN,GAAU,CAAtB,EAAyB,CAAzB,CAAjD;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,SAxBD,EAwBG,KAAKZ,IAxBR;AAyBH,KAnDI;AAqDLgB,UArDK,kBAqDEC,EArDF,EAqDM;AACP,YAAI,KAAKjB,IAAL,CAAUY,CAAV,GAAc,CAAC,GAAnB,EAAwB;;AAEpB,iBAAKZ,IAAL,CAAUY,CAAV,GAAc,CAAC,GAAf;AACA,iBAAKL,YAAL,CAAkBb,GAAGmB,SAArB,EAAgCC,cAAhC,GAAiD,IAAIpB,GAAGqB,IAAP,CAAY,CAAZ,EAAe,CAAf,CAAjD;AACA;AACH,SALD,MAMK,IAAI,KAAKf,IAAL,CAAUY,CAAV,GAAc,GAAlB,EAAuB;AACxB,iBAAKZ,IAAL,CAAUY,CAAV,GAAc,GAAd;AACA,iBAAKL,YAAL,CAAkBb,GAAGmB,SAArB,EAAgCC,cAAhC,GAAiD,IAAIpB,GAAGqB,IAAP,CAAY,CAAZ,EAAe,CAAf,CAAjD;AACA;AACH;AACJ,KAjEI;;;AAmELG,oBAAgB,wBAAUC,OAAV,EAAmBC,YAAnB,EAAiCC,aAAjC,EAAgD;AAC5D;AACA3B,WAAGY,IAAH,CAAQ,QAAR,EAAkBC,YAAlB,CAA+Bf,aAA/B,EAA8C8B,gBAA9C,CAA+DF,aAAapB,IAAb,CAAkBuB,IAAjF,EAAuFF,cAAcrB,IAAd,CAAmBuB,IAA1G;AACH;;AAtEI,CAAT","file":"Game10DragMove.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\Scripts\\Control\\Games\\Game10","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar Game10Control = require(\"Game10Control\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start() {\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (event) {\r\n            // this.opacity = 255;\r\n            if (cc.find(\"Canvas\").getComponent(Game10Control).GameStatus == 1) {\r\n                var delta = event.touch.getDelta();\r\n                if (this.x >= -150 && this.x <= 150) {\r\n                    this.x += delta.x;\r\n                    this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(delta.x * 5, 0);\r\n                }\r\n                else if ((this.x + delta.x) > -150 || (this.x + delta.x) < 150) {\r\n                    this.x += delta.x;\r\n                    this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(delta.x * 5, 0);\r\n                }\r\n            }\r\n            // if (this.x < -150) {\r\n            //     this.x = -150;\r\n            //     this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(0, 0);\r\n            //     // cc.find(\"Canvas\").getComponent(Game10Control).OnPanelHitBorder(this.name, \"left\");\r\n            // }\r\n            // if (this.x > 150) {\r\n            //     this.x = 150;\r\n            //     this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(0, 0);\r\n            //     // cc.find(\"Canvas\").getComponent(Game10Control).OnPanelHitBorder(this.name, \"right\");\r\n            // }\r\n            // cc.log(\"move:\" + this.node.name);\r\n        }, this.node);\r\n    },\r\n\r\n    update(dt) {\r\n        if (this.node.x < -150) {\r\n\r\n            this.node.x = -150;\r\n            this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(0, 0);\r\n            // cc.find(\"Canvas\").getComponent(Game10Control).OnPanelHitBorder(this.node.name, \"left\");\r\n        }\r\n        else if (this.node.x > 150) {\r\n            this.node.x = 150;\r\n            this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(0, 0);\r\n            // cc.find(\"Canvas\").getComponent(Game10Control).OnPanelHitBorder(this.node.name, \"right\");\r\n        }\r\n    },\r\n\r\n    onBeginContact: function (contact, selfCollider, otherCollider) {\r\n        // cc.log(\"Hit \" + otherCollider.node.name);\r\n        cc.find(\"Canvas\").getComponent(Game10Control).OnPanelHitBorder(selfCollider.node.name, otherCollider.node.name);\r\n    }\r\n\r\n});\r\n"]}