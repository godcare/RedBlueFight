(function() {"use strict";var __module = CC_EDITOR ? module : {exports:{}};var __filename = 'preview-scripts/assets/Scripts/Control/Games/Game10/Game10DragMoveRed.js';var __require = CC_EDITOR ? function (request) {return cc.require(request, require);} : function (request) {return cc.require(request, __filename);};function __define (exports, require, module) {"use strict";
cc._RF.push(module, '7f697cR6e1CaqEbjlqAGA9i', 'Game10DragMoveRed', __filename);
// Scripts/Control/Games/Game10/Game10DragMoveRed.js

"use strict";

var _cc$Class;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Learn cc.Class:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html
var Game10Control = require("Game10Control");
cc.Class((_cc$Class = {
    extends: cc.Component,

    properties: {
        // foo: {
        //     // ATTRIBUTES:
        //     default: null,        // The default value will be used only when the component attaching
        //                           // to a node for the first time
        //     type: cc.SpriteFrame, // optional, default is typeof default
        //     serializable: true,   // optional, default is true
        // },
        // bar: {
        //     get () {
        //         return this._bar;
        //     },
        //     set (value) {
        //         this._bar = value;
        //     }
        // },
        needDown: false
    },

    // LIFE-CYCLE CALLBACKS:

    // onLoad () {},

    update: function update(dt) {},
    start: function start() {
        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (event) {
            // this.opacity = 255;
            if (cc.find("Canvas").getComponent(Game10Control).GameStatus == 1) {
                var delta = event.touch.getDelta();
                cc.log(delta.x);
                if (this.x >= -150 && this.x <= 150) {
                    this.x += delta.x;
                    this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(delta.x * 15, 0);
                    this.needDown = true;
                    // this.getComponent(cc.RigidBody).linearDamping = 100;
                } else if (this.x + delta.x > -150 || this.x + delta.x < 150) {
                    this.x += delta.x;
                    this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(delta.x * 15, 0);
                    this.needDown = true;
                    // this.getComponent(cc.RigidBody).linearDamping = 100;
                }
            }
        }, this.node);
    }
}, _defineProperty(_cc$Class, "update", function update(dt) {
    this.node.y = -90;
    if (this.node.x < -150) {

        this.node.x = -150;
        this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(0, 0);
        this.needDown = false;
        // cc.find("Canvas").getComponent(Game10Control).OnPanelHitBorder(this.node.name, "left");
    } else if (this.node.x > 150) {
        this.node.x = 150;
        this.getComponent(cc.RigidBody).linearVelocity = new cc.Vec2(0, 0);
        this.needDown = false;
        // cc.find("Canvas").getComponent(Game10Control).OnPanelHitBorder(this.node.name, "right");
    }
}), _defineProperty(_cc$Class, "onBeginContact", function onBeginContact(contact, selfCollider, otherCollider) {
    // cc.log("Hit " + otherCollider.node.name);
    cc.find("Canvas").getComponent(Game10Control).OnPanelHitBorder(selfCollider.node.name, otherCollider.node.name);
}), _cc$Class));

cc._RF.pop();
        }
        if (CC_EDITOR) {
            __define(__module.exports, __require, __module);
        }
        else {
            cc.registerModuleFunc(__filename, function () {
                __define(__module.exports, __require, __module);
            });
        }
        })();
        //# sourceMappingURL=Game10DragMoveRed.js.map
        